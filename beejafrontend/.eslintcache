[{"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/index.js":"1","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/App.js":"2","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/history.js":"3","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/LoginPage.js":"4","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/HomePage.js":"5","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"6","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreateEmployee.js":"7","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"8","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EditEmployee.js":"9","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/DetailsEmployee.js":"10","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/Hrpage.js":"11","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreatePersonal.js":"12","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalList.js":"13","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalDetails.js":"14","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalEdit.js":"15"},{"size":712,"mtime":1611407088059,"results":"16","hashOfConfig":"17"},{"size":9066,"mtime":1611829857433,"results":"18","hashOfConfig":"17"},{"size":84,"mtime":1611407088059,"results":"19","hashOfConfig":"17"},{"size":1912,"mtime":1611407088059,"results":"20","hashOfConfig":"17"},{"size":2833,"mtime":1612199329060,"results":"21","hashOfConfig":"17"},{"size":6229,"mtime":1612199247017,"results":"22","hashOfConfig":"17"},{"size":7370,"mtime":1611836530549,"results":"23","hashOfConfig":"17"},{"size":4236,"mtime":1611986877687,"results":"24","hashOfConfig":"17"},{"size":7269,"mtime":1611986842325,"results":"25","hashOfConfig":"17"},{"size":5003,"mtime":1611986817957,"results":"26","hashOfConfig":"17"},{"size":2372,"mtime":1611986969403,"results":"27","hashOfConfig":"17"},{"size":8180,"mtime":1611836317404,"results":"28","hashOfConfig":"17"},{"size":6494,"mtime":1611914588880,"results":"29","hashOfConfig":"17"},{"size":3102,"mtime":1611915879338,"results":"30","hashOfConfig":"17"},{"size":4038,"mtime":1611915975084,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"aub0qz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/index.js",[],["72","73"],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/App.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/history.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/HomePage.js",["74","75","76","77","78","79","80","81"],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["82","83","84","85","86","87","88","89"],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreateEmployee.js",["90","91","92","93","94"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    // toast.configure() \n    // const remind = (message)=>{  \n    //     toast.success(message,\n    //     {position: toast.POSITION.BOTTOM_RIGHT})  \n    //   };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange}\n                        required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                            </SelectBox>\n                            \n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"DEVOPS\"> DEVOPS</Option>\n                            <Option value=\"QA-ENGINEER\"> QA-ENGINEER</Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["95","96","97","98","99","100","101","102","103","104"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nimport { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    \n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n  \n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EditEmployee.js",["105","106","107"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name} onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"DEVOPS\"> DEVOPS</Option>\n                            <Option value=\"QA-ENGINEER\"> QA-ENGINEER</Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/DetailsEmployee.js",["108","109","110","111","112","113","114","115","116","117"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const DetailsEmployee = () => {\n\n    const { id ,code} = useParams();\n\n    \n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate:\"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    \n\n\n  \n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Container\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/Hrpage.js",["118","119","120","121"],"import React ,{Fragment} from 'react';\nimport Styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\n\n\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5; \n`;\n\n\nexport const Hr = () => {\n    return(\n       \n        \n        <Fragment>\n       \n        <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n            HR\n                </Navbar>\n                <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to ={\"/hr\"}>\n                         LEAVE MANGEMENT\n                         </LinkTag>\n                         </TableData></TableRow>\n            \n                    <TableRow><TableData>\n                        <LinkTag to={\"\"} >\n                         LEAVE POLICY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> <LinkTag to={'/personal'} >  PERSONAL DETAILS </LinkTag></TableData></TableRow>\n                    <TableRow ><TableData>\n                \n                        OFFER LETTER & INCREMENT\n                        </TableData></TableRow>\n                    \n                    <TableRow ><TableData>\n                \n                        DOCUMENTS\n                        </TableData></TableRow>\n                             \n                </TableRow>\n            </Table>\n    </Fragment>\n    )\n}","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreatePersonal.js",["122","123","124","125","126"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreatePersonal = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        // address:\"\",\n        email: \" \",\n        bankaccno: \"\",\n        bank: \"\",\n        role: \"\",\n        ifsccode: \"\",\n        PAN: \"\"\n    });\n\n    const PersonalList = gql`\n     mutation {\n         createPersonal(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n            \n              email:\"${formData.email}\",\n              bankaccno:\"${formData.bankaccno}\",\n              bank:\"${formData.bank}\",\n              role:\"${formData.role}\",\n              ifsccode:\"${formData.ifsccode}\" ,\n              PAN:\"${formData.PAN}\"\n\n\n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PersonalCreate, { loading, error, data }] = useMutation(PersonalList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    toast.configure() \n    const remind = (message)=>{  \n        toast.success(message,\n        {position: toast.POSITION.BOTTOM_RIGHT})  \n      };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        PersonalCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n               Create Personal data\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    {/* <TableRow>\n                        <TableColumn><Lable htmlFor=\"Address\" > Address</Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"address\" onChange={handleChange} required></Input></TableColumn>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break /> \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable > Permanent Account Number  </Lable></TableColumn>\n                        <TableColumn><Input name=\"PAN\" size=\"10\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    {/* <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Bank\"> Bank Name</Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"Bank\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"SBI\">SBI </Option>\n                            <Option value=\"AXIS\"> AXIS </Option>\n                            <Option value=\"ICICI\"> ICICI </Option>\n                            <Option value=\"HDFC\"> HDFC </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break /> */}\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"\"> ACCOUNT Number </Lable></TableColumn>\n                        <TableColumn><Input name=\"bankaccno\" onChange={handleChange} type=\"text\" help=\"this is your bank \" required /></TableColumn>\n                        {/* <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn> */}\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"\" > IFSC CODE </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"ifsccode\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalList.js",["127","128","129","130","131","132","133","134","135","136"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link ,useParams,useHistory} from 'react-router-dom';\n//  import history from './../History';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSearch, faTrash } from '@fortawesome/free-solid-svg-icons'\n// import { from } from 'apollo-boost';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\n\n\n// const TriangleButton = Styled(Actionbutton)`\n// border-left: 7px solid transparent;\n// border-right:7px solid transparent;\n// border-top: 6px dashed;\n// `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover =Styled.a`\n&:hover {\n    color:blue;\n`;\n\nexport const PersonalList = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    personalList{\n    \n        name\n        \n        code\n        email\n        role\n        bank\n        bankaccno\n        PAN\n        ifsccode\n        }\n  }`;\n  const PersonalDetailsById = gql`\n  query PersonalDetails($id:String!){\n      personalinfo(id:$id){\n          name\n          email\n          role\n          bank\n          bankaccno\n          ifsccode\n          PAN\n      }\n  }`;\n// const [emp,setemp] = useState({ 'idTodisplay': \"\" });\n//  const history = useHistory();\n//   const navigateTo = () => history.push(`/read/${data.employee.id}`);\n\n//     const [perId, setPerId] = useState({ 'idToDelete': \"\" });\n  \n \n\n//     const DELETE_Personal = gql`\n//     mutation DeletePer   sonal($id: String!){\n//     deletePersonal(id: $id){\n//     respCode,\n//     respMessage \n//   }\n// }\n// `;\n\n\nconst { loading, error, data} = useQuery(Show,PersonalDetailsById);\n\n\n// const [deleteMutation] = useMutation(DELETE_Personal);\n   \n//     const handleDelete = (deleteId) => {\n//         if (window.confirm(\"Do you really want to leave?\")) {\n//             setPerId({ 'idToDelete': deleteId });\n//             console.log(\"handleDelte\", deleteId, perId);\n//             deleteMutation({ variables: { id: deleteId } });\n//         }\n//         else {\n\n//         }\n//     };\n\n    //  const handleInputChange = event => {\n    //     const { value } = event.target\n    //     this.props.userSearchInput(value);\n    //     this.setState({\n    //         query: value\n    //     });\n    // };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n  \n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n            Personal Details\n                       \n\n                 <Button >\n                    <LinkTag to={\"/personalData\"}>Add </LinkTag>\n                </Button>\n                \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                    <TableHeading> ID</TableHeading>\n                    <TableHeading>Name</TableHeading>\n                    {/* <TableHeading>Address</TableHeading> */}\n                    <TableHeading>Email</TableHeading>\n                    <TableHeading>Role</TableHeading>\n                    <TableHeading>PAN No</TableHeading>\n                    {/* <TableHeading>Bank </TableHeading> */}\n                    <TableHeading>Account No</TableHeading>\n                    \n                    <TableHeading>IFSC code</TableHeading>\n                    <TableHeading>Edit</TableHeading>\n                    <TableHeading>Delete</TableHeading>\n                    \n                    \n                   \n                  \n                    </TableRow>\n                    {data.personalList.map((personal,id) => (\n                        <TableRow>\n                            <LinkTag to={`/Hr/PersonalDetails/${personal.code}`} >\n                               <TableData key={id}>{personal.code}</TableData>\n                            \n                            </LinkTag>\n                        <TableData>{personal.name}</TableData>\n                        {/* <TableData>{personal.address}</TableData> */}\n                        <TableData>{personal.email}</TableData>\n                        <TableData>{personal.role}</TableData>\n                        <TableData>{personal.PAN}</TableData>\n                        {/* <TableData>{personal.bank}</TableData> */}\n                        <TableData>{personal.bankaccno}</TableData>\n                        <TableData>{personal.ifsccode}</TableData>\n                        <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/Edit/${personal.code}`} >\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                    \n                                    <FontAwesomeIcon icon={faTrash}  \n                                    ></FontAwesomeIcon>\n\n                            \n                            </TableData>\n                           \n\n                        </TableRow>\n                    ))}\n\n\n                    \n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalDetails.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;rms: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst Label =Styled.label`\nfont-size:25px\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntextrt;\n`;\n\n\nexport const PersonalDetails= () => {\n\n    const { id } = useParams();\n\n    const PersonalById = gql`\n  query Personal($id:String!){\n      personal(id:$id){\n          name\n          email\n          role\n          bank\n          bankaccno\n          ifsccode\n          PAN\n      }\n  }`;\n\n  const {loading,error,data} = useQuery(PersonalById,{variables:{id : id}});\n//   if (loading) return <p>Loading!!</p>\n//   if (error) return <p>Error%%</p>\n    \n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n            Personal Details\n                       \n\n                \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                <TableRow>\n\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Name</Label></TableColumn>\n    <TableColumn><Input  /></TableColumn>\n\n</TableRow>\n<Break/>\n<TableRow>\n    <TableColumn><Label>Email</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Role</Label></TableColumn>\n    <TableColumn><Input /></TableColumn>\n</TableRow>\n\n<Break />\n<TableRow>\n    <TableColumn><Label>Permanent Account Number</Label></TableColumn>\n    <TableColumn><Input type=\"text\" /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Account no</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Ifsccode</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n\n                \n\n\n                    \n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n\n                   ","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalEdit.js",["151","152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nconst Label = Styled.label`\nfont-size:20px\n`;\n\n\nexport const PersonalEdit = () => {\n\n    const { id } = useParams();\n\n\n    const [pState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email: \" \",\n        role: \"\",\n        PAN: \"\",\n        bankaccno: \"\",\n        ifsccode: \"\"\n    })\n\n    const GetPersonalById = gql`\n    query PersonalDetails($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            PAN\n            bankaccno\n            ifsccode\n\n        }       \n    }`;\n\n    const EditingPersonal = gql`\n     mutation UpdatePersonal($id: String!){\n         updatePersonal(id: $id,data: {\n              name:\"${pState.name}\",\n              code:\"${pState.code}\",\n              email:\"${pState.email}\",\n              role:\"${pState.role}\",\n              PAN:\"${pState.PAN}\",\n              bankaccno:\"${pState.bankaccno}\",\n              ifsccode:\"${pState.ifsccode}\",\n\n               \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    // const { loading, error, data } = useQuery(GetPersonalById, { variables: { id: id } });\n\n    // const [EditMutation,] = useMutation(EditingPersonal);\n    // if (loading) return <p>Loading....</p>\n    // if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...pState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(pState);\n        // EditMutation({ variables: { id: id } });\n\n    };\n    const data= {};\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n            Personal Details\n                       \n\n                \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n               \n<TableRow>\n    <TableColumn><Label>Name</Label></TableColumn>\n    <TableColumn><Input  /></TableColumn>\n\n</TableRow>\n<Break/>\n<TableRow>\n    <TableColumn><Label>Email</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Role</Label></TableColumn>\n    <TableColumn><Input /></TableColumn>\n</TableRow>\n\n<Break />\n<TableRow>\n    <TableColumn><Label>Permanent Account Number</Label></TableColumn>\n    <TableColumn><Input type=\"text\" /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Account no</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n<Break />\n<TableRow>\n    <TableColumn><Label>Ifsccode</Label></TableColumn>\n    <TableColumn><Input type=\"text\"  /></TableColumn>\n\n</TableRow>\n\n                \n\n\n                    \n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n\n                   ",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"172","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":18},{"ruleId":"168","severity":1,"message":"173","line":5,"column":20,"nodeType":"170","messageId":"171","endLine":5,"endColumn":23},{"ruleId":"168","severity":1,"message":"174","line":5,"column":25,"nodeType":"170","messageId":"171","endLine":5,"endColumn":36},{"ruleId":"168","severity":1,"message":"175","line":9,"column":10,"nodeType":"170","messageId":"171","endLine":9,"endColumn":24},{"ruleId":"168","severity":1,"message":"176","line":9,"column":26,"nodeType":"170","messageId":"171","endLine":9,"endColumn":31},{"ruleId":"168","severity":1,"message":"177","line":25,"column":7,"nodeType":"170","messageId":"171","endLine":25,"endColumn":11},{"ruleId":"168","severity":1,"message":"178","line":48,"column":7,"nodeType":"170","messageId":"171","endLine":48,"endColumn":13},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"177","line":17,"column":7,"nodeType":"170","messageId":"171","endLine":17,"endColumn":11},{"ruleId":"168","severity":1,"message":"179","line":67,"column":7,"nodeType":"170","messageId":"171","endLine":67,"endColumn":19},{"ruleId":"168","severity":1,"message":"180","line":74,"column":7,"nodeType":"170","messageId":"171","endLine":74,"endColumn":15},{"ruleId":"168","severity":1,"message":"181","line":82,"column":7,"nodeType":"170","messageId":"171","endLine":82,"endColumn":12},{"ruleId":"168","severity":1,"message":"182","line":117,"column":12,"nodeType":"170","messageId":"171","endLine":117,"endColumn":15},{"ruleId":"168","severity":1,"message":"183","line":117,"column":16,"nodeType":"170","messageId":"171","endLine":117,"endColumn":22},{"ruleId":"168","severity":1,"message":"184","line":119,"column":9,"nodeType":"170","messageId":"171","endLine":119,"endColumn":19},{"ruleId":"168","severity":1,"message":"175","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":24},{"ruleId":"168","severity":1,"message":"185","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"177","line":19,"column":7,"nodeType":"170","messageId":"171","endLine":19,"endColumn":11},{"ruleId":"168","severity":1,"message":"186","line":63,"column":7,"nodeType":"170","messageId":"171","endLine":63,"endColumn":16},{"ruleId":"168","severity":1,"message":"187","line":102,"column":46,"nodeType":"170","messageId":"171","endLine":102,"endColumn":50},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"188","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":46},{"ruleId":"168","severity":1,"message":"174","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":21},{"ruleId":"168","severity":1,"message":"189","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":17},{"ruleId":"168","severity":1,"message":"177","line":16,"column":7,"nodeType":"170","messageId":"171","endLine":16,"endColumn":11},{"ruleId":"168","severity":1,"message":"190","line":31,"column":7,"nodeType":"170","messageId":"171","endLine":31,"endColumn":16},{"ruleId":"168","severity":1,"message":"191","line":39,"column":7,"nodeType":"170","messageId":"171","endLine":39,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":41,"column":7,"nodeType":"170","messageId":"171","endLine":41,"endColumn":13},{"ruleId":"168","severity":1,"message":"186","line":60,"column":7,"nodeType":"170","messageId":"171","endLine":60,"endColumn":16},{"ruleId":"168","severity":1,"message":"192","line":66,"column":7,"nodeType":"170","messageId":"171","endLine":66,"endColumn":14},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"177","line":16,"column":7,"nodeType":"170","messageId":"171","endLine":16,"endColumn":11},{"ruleId":"168","severity":1,"message":"186","line":60,"column":7,"nodeType":"170","messageId":"171","endLine":60,"endColumn":16},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"177","line":15,"column":7,"nodeType":"170","messageId":"171","endLine":15,"endColumn":11},{"ruleId":"168","severity":1,"message":"190","line":30,"column":7,"nodeType":"170","messageId":"171","endLine":30,"endColumn":16},{"ruleId":"168","severity":1,"message":"191","line":38,"column":7,"nodeType":"170","messageId":"171","endLine":38,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":40,"column":7,"nodeType":"170","messageId":"171","endLine":40,"endColumn":13},{"ruleId":"168","severity":1,"message":"186","line":59,"column":7,"nodeType":"170","messageId":"171","endLine":59,"endColumn":16},{"ruleId":"168","severity":1,"message":"192","line":65,"column":7,"nodeType":"170","messageId":"171","endLine":65,"endColumn":14},{"ruleId":"168","severity":1,"message":"193","line":73,"column":17,"nodeType":"170","messageId":"171","endLine":73,"endColumn":21},{"ruleId":"168","severity":1,"message":"194","line":76,"column":22,"nodeType":"170","messageId":"171","endLine":76,"endColumn":30},{"ruleId":"168","severity":1,"message":"195","line":118,"column":12,"nodeType":"170","messageId":"171","endLine":118,"endColumn":24},{"ruleId":"168","severity":1,"message":"175","line":6,"column":10,"nodeType":"170","messageId":"171","endLine":6,"endColumn":24},{"ruleId":"168","severity":1,"message":"176","line":6,"column":26,"nodeType":"170","messageId":"171","endLine":6,"endColumn":31},{"ruleId":"168","severity":1,"message":"177","line":23,"column":7,"nodeType":"170","messageId":"171","endLine":23,"endColumn":11},{"ruleId":"168","severity":1,"message":"178","line":48,"column":7,"nodeType":"170","messageId":"171","endLine":48,"endColumn":13},{"ruleId":"168","severity":1,"message":"175","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":24},{"ruleId":"168","severity":1,"message":"177","line":18,"column":7,"nodeType":"170","messageId":"171","endLine":18,"endColumn":11},{"ruleId":"168","severity":1,"message":"186","line":62,"column":7,"nodeType":"170","messageId":"171","endLine":62,"endColumn":16},{"ruleId":"168","severity":1,"message":"187","line":107,"column":46,"nodeType":"170","messageId":"171","endLine":107,"endColumn":50},{"ruleId":"168","severity":1,"message":"196","line":112,"column":11,"nodeType":"170","messageId":"171","endLine":112,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"188","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":46},{"ruleId":"168","severity":1,"message":"197","line":3,"column":26,"nodeType":"170","messageId":"171","endLine":3,"endColumn":36},{"ruleId":"168","severity":1,"message":"174","line":5,"column":25,"nodeType":"170","messageId":"171","endLine":5,"endColumn":36},{"ruleId":"168","severity":1,"message":"198","line":7,"column":18,"nodeType":"170","messageId":"171","endLine":7,"endColumn":26},{"ruleId":"168","severity":1,"message":"177","line":17,"column":7,"nodeType":"170","messageId":"171","endLine":17,"endColumn":11},{"ruleId":"168","severity":1,"message":"179","line":67,"column":7,"nodeType":"170","messageId":"171","endLine":67,"endColumn":19},{"ruleId":"168","severity":1,"message":"180","line":74,"column":7,"nodeType":"170","messageId":"171","endLine":74,"endColumn":15},{"ruleId":"168","severity":1,"message":"181","line":89,"column":7,"nodeType":"170","messageId":"171","endLine":89,"endColumn":12},{"ruleId":"168","severity":1,"message":"199","line":96,"column":13,"nodeType":"170","messageId":"171","endLine":96,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"188","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":46},{"ruleId":"168","severity":1,"message":"174","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":21},{"ruleId":"168","severity":1,"message":"177","line":14,"column":7,"nodeType":"170","messageId":"171","endLine":14,"endColumn":11},{"ruleId":"168","severity":1,"message":"200","line":18,"column":7,"nodeType":"170","messageId":"171","endLine":18,"endColumn":12},{"ruleId":"168","severity":1,"message":"190","line":29,"column":7,"nodeType":"170","messageId":"171","endLine":29,"endColumn":16},{"ruleId":"168","severity":1,"message":"191","line":37,"column":7,"nodeType":"170","messageId":"171","endLine":37,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":39,"column":7,"nodeType":"170","messageId":"171","endLine":39,"endColumn":13},{"ruleId":"168","severity":1,"message":"186","line":57,"column":7,"nodeType":"170","messageId":"171","endLine":57,"endColumn":16},{"ruleId":"168","severity":1,"message":"192","line":66,"column":7,"nodeType":"170","messageId":"171","endLine":66,"endColumn":14},{"ruleId":"168","severity":1,"message":"201","line":70,"column":7,"nodeType":"170","messageId":"171","endLine":70,"endColumn":19},{"ruleId":"168","severity":1,"message":"202","line":95,"column":10,"nodeType":"170","messageId":"171","endLine":95,"endColumn":17},{"ruleId":"168","severity":1,"message":"203","line":95,"column":18,"nodeType":"170","messageId":"171","endLine":95,"endColumn":23},{"ruleId":"168","severity":1,"message":"187","line":95,"column":24,"nodeType":"170","messageId":"171","endLine":95,"endColumn":28},{"ruleId":"168","severity":1,"message":"174","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":21},{"ruleId":"168","severity":1,"message":"172","line":5,"column":28,"nodeType":"170","messageId":"171","endLine":5,"endColumn":36},{"ruleId":"168","severity":1,"message":"200","line":15,"column":7,"nodeType":"170","messageId":"171","endLine":15,"endColumn":12},{"ruleId":"168","severity":1,"message":"190","line":26,"column":7,"nodeType":"170","messageId":"171","endLine":26,"endColumn":16},{"ruleId":"168","severity":1,"message":"191","line":34,"column":7,"nodeType":"170","messageId":"171","endLine":34,"endColumn":13},{"ruleId":"168","severity":1,"message":"178","line":36,"column":7,"nodeType":"170","messageId":"171","endLine":36,"endColumn":13},{"ruleId":"168","severity":1,"message":"192","line":59,"column":7,"nodeType":"170","messageId":"171","endLine":59,"endColumn":14},{"ruleId":"168","severity":1,"message":"199","line":70,"column":13,"nodeType":"170","messageId":"171","endLine":70,"endColumn":15},{"ruleId":"168","severity":1,"message":"204","line":83,"column":11,"nodeType":"170","messageId":"171","endLine":83,"endColumn":26},{"ruleId":"168","severity":1,"message":"205","line":97,"column":11,"nodeType":"170","messageId":"171","endLine":97,"endColumn":26},{"ruleId":"168","severity":1,"message":"206","line":121,"column":11,"nodeType":"170","messageId":"171","endLine":121,"endColumn":23},{"ruleId":"168","severity":1,"message":"207","line":128,"column":11,"nodeType":"170","messageId":"171","endLine":128,"endColumn":23},{"ruleId":"168","severity":1,"message":"187","line":134,"column":11,"nodeType":"170","messageId":"171","endLine":134,"endColumn":15},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Logo' is assigned a value but never used.","'Button' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'Hover' is assigned a value but never used.","'emp' is assigned a value but never used.","'setemp' is assigned a value but never used.","'navigateTo' is assigned a value but never used.","'Multiselect' is defined but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'graphql' is defined but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'code' is assigned a value but never used.","'setState' is assigned a value but never used.","'EditMutation' is assigned a value but never used.","'remind' is assigned a value but never used.","'useHistory' is defined but never used.","'faSearch' is defined but never used.","'id' is assigned a value but never used.","'Lable' is assigned a value but never used.","'TableHeading' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'GetPersonalById' is assigned a value but never used.","'EditingPersonal' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]